<launch>
    <arg name="namespace" default="car"/>
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="cmd_timeout" default="0.5"/>

    <!-- Vehicle pose -->
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.1"/>
    <arg name="roll" default="0.0"/>
    <arg name="pitch" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <include file="$(find rover_description)/launch/description.launch">
        <arg name="namespace" value="$(arg namespace)"/>
    </include>

    <group ns="$(arg namespace)">
        <!-- Create the world. -->
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(arg world_name)"/>
        </include>

        <!-- Spawn the vehicle. -->
        <node name="spawn_vehicle" pkg="gazebo_ros" type="spawn_model"
              args="-urdf -param robot_description -model rover
                    -gazebo_namespace /$(arg namespace)/gazebo
                    -x $(arg x) -y $(arg y) -z $(arg z)
                    -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

        <!-- Load the joint controllers. One of these publishes the joint states
                 to joint_states. -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
              args="$(find rover_simulation)/config/joint_ctrlr_params.yaml"/>

        <!-- Control the steering, axle, and shock absorber joints. -->
        <node name="ackermann_controller" pkg="rover_simulation"
              type="ackermann_controller.py">
            <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
            <rosparam file="$(find rover_simulation)/config/ackermann_ctrlr_params.yaml"
                      command="load"/>
        </node>
    </group>
</launch>
